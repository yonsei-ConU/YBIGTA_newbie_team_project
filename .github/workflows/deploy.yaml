name: CI/CD Pipeline - Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/ybita-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Pull latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/ybita-app:latest
          
          # Stop and remove existing container
          docker stop ybita-app || true
          docker rm ybita-app || true
          
          # Create custom network for isolation
          docker network create app-network || true
          
          # Run new container with enhanced security
          docker run -d \
            --name ybita-app \
            --restart unless-stopped \
            --network app-network \
            --memory=512m \
            --cpus=1.0 \
            --read-only \
            --tmpfs /tmp \
            --tmpfs /var/tmp \
            --security-opt=no-new-privileges \
            --cap-drop=ALL \
            -p 127.0.0.1:8000:8000 \
            -e MYSQL_USER="${{ secrets.MYSQL_USER }}" \
            -e MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
            -e MYSQL_HOST="${{ secrets.MYSQL_HOST }}" \
            -e MYSQL_PORT="${{ secrets.MYSQL_PORT }}" \
            -e MYSQL_DB="${{ secrets.MYSQL_DB }}" \
            -e MONGO_URL="${{ secrets.MONGO_URL }}" \
            ${{ secrets.DOCKER_USERNAME }}/ybita-app:latest
          
          # Clean up unused images
          docker image prune -f